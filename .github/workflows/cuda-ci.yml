name: CUDA GPU
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build_wheel:
    if: contains(github.event.pull_request.labels.*.name, 'CUDA CI')
    name: Build wheel for Pull Request
    runs-on: ubuntu-latest
    steps:
      - name: Start Energy Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          task: start-measurement
      - uses: actions/checkout@v4
      - env:
          CIBW_ARCHS: x86_64
          CIBW_BUILD: cp312-manylinux_x86_64
          CIBW_BUILD_VERBOSITY: 1
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
        name: Build wheels
        uses: pypa/cibuildwheel@v2.22.0
      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels
          path: ./wheelhouse/*.whl
      - id: display-measurement
        name: Display Energy Results
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          task: display-results
      - name: Save Total Energy Consumption Data
        run: echo '${{ steps.final-measurement.outputs.data-total-json }}' > total_energy_consumption.json
      - name: Upload Energy Consumption Artifact
        uses: actions/upload-artifact@v4
        with:
          name: total-energy-consumption
          path: total_energy_consumption.json
  tests:
    if: contains(github.event.pull_request.labels.*.name, 'CUDA CI')
    name: Run Array API unit tests
    needs:
      - build_wheel
    runs-on:
      group: cuda-gpu-runner-group
    steps:
      - name: Start Energy Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          task: start-measurement
      - uses: actions/download-artifact@v4
        with:
          path: ~/dist
          pattern: cibw-wheels
      - uses: actions/setup-python@v5
        with:
          python-version: 3.12.3
      - name: Checkout main repository
        uses: actions/checkout@v4
      - id: cache-conda
        name: Cache conda environment
        uses: actions/cache@v4
        with:
          key:
            ${{ runner.os }}-build-${{ hashFiles('build_tools/github/create_gpu_environment.sh')
            }}-${{ hashFiles('build_tools/github/pylatest_conda_forge_cuda_array-api_linux-64_conda.lock')
            }}
          path: ~/conda
      - if: ${{ steps.cache-conda.outputs.cache-hit != 'true' }}
        name: Install miniforge
        run: bash build_tools/github/create_gpu_environment.sh
      - id: measurement-6
        name: Record Measurement After Install miniforge
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Install miniforge
          task: get-measurement
      - name: Install scikit-learn
        run: 'source "${HOME}/conda/etc/profile.d/conda.sh"

          conda activate sklearn

          pip install ~/dist/cibw-wheels/$(ls ~/dist/cibw-wheels)

          '
      - id: measurement-8
        name: Record Measurement After Install scikit-learn
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Install scikit-learn
          task: get-measurement
      - name: Run array API tests
        run: 'source "${HOME}/conda/etc/profile.d/conda.sh"

          conda activate sklearn

          python -c "import sklearn; sklearn.show_versions()"


          SCIPY_ARRAY_API=1 pytest --pyargs sklearn -k ''array_api'' -v

          '
        working-directory: /home/runner
      - id: measurement-10
        name: Record Measurement After Run array API tests
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Run array API tests
          task: get-measurement
      - id: display-measurement
        name: Display Energy Results
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          task: display-results
      - name: Save Total Energy Consumption Data
        run: echo '${{ steps.final-measurement.outputs.data-total-json }}' > total_energy_consumption.json
      - name: Upload Energy Consumption Artifact
        uses: actions/upload-artifact@v4
        with:
          name: total-energy-consumption
          path: total_energy_consumption.json
    timeout-minutes: 20
